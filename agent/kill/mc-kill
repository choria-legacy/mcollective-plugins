#!/usr/bin/env ruby
# Client program for the mcollective instance kill agent
# Copyright 2011 Canonical Ltd.
# Released under Apache License

require 'mcollective'

include MCollective::RPC

options = rpcoptions do |parser, options|
    parser.define_head "Manage puppet on Ubuntu"
    parser.banner = "Usage: mc-kill [-options] [kill|forcekill]"

    parser.separator ""
    parser.separator "Run Options"
end

killrpc = rpcclient("kill", {:options => options})

def log(msg)
    puts("#{Time.now} - #{msg}")
end

def summarize(stats)
    puts("\n---- kill agent summary ----")
    puts("           Nodes: #{stats[:discovered]} / #{stats[:responses]}")
    printf("    Elapsed Time: %.2f s\n\n", stats[:blocktime])
end

if  ARGV.length == 1
    action = ARGV.shift

    unless action =~ /^(kill|forcekill)$/
        puts("Action has to be kill or forcekill")
        exit 1
    end
    killrpc.send(action).each do |node|
        begin
            printf("%-40s %s\n", node[:sender], node[:statusmsg])
        rescue StandardError => e
            log "The RPC agent #{node[:sender]} returned an error: #{e}"
        end
    end
else
    puts("Usage: mc-kill [-options] [kill|forcekill]")
    exit 1
end

summarize(killrpc.stats)

killrpc.disconnect
# vi:tabstop=4:expandtab:ai
